{"version":3,"sources":["../src/BsMultiSelect.js"],"names":[],"mappings":"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","file":"BsMultiSelect.js","sourcesContent":["import $ from 'jquery'\r\n\r\nimport MultiSelect from './MultiSelect'\r\nimport LabelAdapter from './LabelAdapter';\r\nimport {OptionsAdapterJson,OptionsAdapterElement} from './OptionsAdapters';\r\n\r\nimport Bs4StylingMethodCss from './Bs4StylingMethodCss'\r\nimport Bs4StylingMethodJs from './Bs4StylingMethodJs'\r\nimport Bs4Styling from './Bs4Styling';\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\n\r\nimport { Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss} from './Bs4SelectedItemContent';\r\nimport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss} from './Bs4DropDownItemContent';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, settings, onDispose) => {\r\n                let configuration = $.extend({}, settings); // settings used per jQuery intialization, configuration per element\r\n                if (configuration.preBuildConfiguration)\r\n                    configuration.preBuildConfiguration(element, configuration);\r\n                \r\n                var $element= $(element);\r\n                let optionsAdapter = null;\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    var trigger = function(eventName){\r\n                        $element.trigger(eventName);\r\n                    }\r\n                    if (configuration.options){\r\n                        optionsAdapter = OptionsAdapterJson(\r\n                            element,\r\n                            configuration.options,\r\n                            configuration.getDisabled,\r\n                            configuration.getIsValid,\r\n                            configuration.getIsInvalid,\r\n                            trigger );\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-filter-${element.id}`;\r\n            \r\n                    }else {\r\n                        if (!configuration.label)\r\n                        {\r\n                            let $formGroup = $(element).closest('.form-group');\r\n                            if ($formGroup.length == 1) {\r\n                                let $label = $formGroup.find(`label[for=\"${element.id}\"]`);\r\n                                if ($label.length>0)\r\n                                {   \r\n                                    let label = $label.get(0);\r\n                                    let forId = label.getAttribute('for');\r\n                                    if (forId == element.id) {\r\n                                        configuration.label = label;\r\n                                    }\r\n                                }   \r\n                            }\r\n                        }\r\n                        optionsAdapter = OptionsAdapterElement(element, trigger);\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-input-${((element.id)?element.id:element.name).toLowerCase()}-id`;\r\n                    }\r\n                }\r\n\r\n                let labelAdapter = LabelAdapter(configuration.label, configuration.createInputId);\r\n\r\n                let useCss = configuration.useCss;\r\n                let styling = configuration.styling;\r\n                if (!configuration.adapter)\r\n                {\r\n                    let stylingMethod = configuration.stylingMethod;\r\n                    if (!stylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            stylingMethod = Bs4StylingMethodCss(configuration);\r\n                        else\r\n                            stylingMethod = Bs4StylingMethodJs(configuration);\r\n                    }\r\n                    styling = Bs4Styling(stylingMethod, configuration, $);\r\n                }\r\n\r\n                let selectedItemContent = configuration.selectedItemContent;\r\n                if (!selectedItemContent){\r\n                    let selectedItemContentStylingMethod = configuration.selectedItemContentStylingMethod;\r\n                    if (!selectedItemContentStylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodCss(configuration, $);\r\n                        else\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodJs(configuration, $);\r\n                    }\r\n                    selectedItemContent = Bs4SelectedItemContent(selectedItemContentStylingMethod, configuration, $);\r\n                }\r\n\r\n                let dropDownItemContent = configuration.bs4DropDownItemContent;\r\n                if (!dropDownItemContent){\r\n                    let dropDownItemContentStylingMethod = configuration.dropDownItemContentStylingMethod;\r\n                    if (useCss)\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodCss(configuration, $);\r\n                    else\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodJs(configuration, $);\r\n                    dropDownItemContent = Bs4DropDownItemContent(dropDownItemContentStylingMethod, configuration, $)\r\n                }\r\n\r\n                let createStylingComposite = function(container, selectedPanel, filterInputItem, filterInput, dropDownMenu){\r\n                    return {\r\n                        $container:$(container),\r\n                        $selectedPanel:$(selectedPanel),\r\n                        $filterInputItem:$(filterInputItem),\r\n                        $filterInput:$(filterInput),\r\n                        $dropDownMenu:$(dropDownMenu)\r\n                    };\r\n                }\r\n\r\n                let multiSelect = new MultiSelect(\r\n                    optionsAdapter,\r\n                    styling,\r\n                    selectedItemContent,\r\n                    dropDownItemContent,\r\n                    labelAdapter,\r\n                    createStylingComposite,\r\n                    configuration,\r\n                    onDispose,\r\n                    window);\r\n\r\n                if (configuration.postBuildConfiguration)\r\n                    configuration.postBuildConfiguration(element, multiSelect);\r\n                \r\n                multiSelect.init();\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n"]}